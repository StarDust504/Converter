{"ast":null,"code":"/*interface userType {\r\n    id: number,\r\n    login: string,\r\n    avatar_url  : string\r\n}*/\n\nconst Convert = () => {\n\n  /*const [currency, setCurrency] = useState<any>()\r\n    useEffect(() => {\r\n      axios.get(\"https://api.freecurrencyapi.com/v1/latest?apikey=fca_live_5VV9AFER3RG9q1OWWk8YwSxFjzoST5KYAvmw2We3&currencies=\").then((response) => {\r\n          setCurrency(response.data);\r\n      }).catch((error) => {\r\n          alert(error);\r\n      });\r\n  });\r\n    return <div>\r\n      <h2>Currencies</h2>\r\n      <table>\r\n          <thead>\r\n              <tr>\r\n                  <th>Key</th>\r\n                  <th>Code</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr>\r\n                  {Object.values(currency).map(v => (\r\n                      <tr>\r\n                          <td>{v[\"key\"]}</td>\r\n                      </tr>\r\n                  ))}\r\n              </tr>\r\n          </tbody>\r\n      </table>\r\n  </div>\r\n  /*const [users, setUsers] = useState<userType[]>([])\r\n  useEffect(() => {\r\n      axios.get(\"https://api.github.com/users\").then((response) => {\r\n          setUsers(response.data);\r\n      }).catch((error) => {\r\n          alert(error);\r\n      });\r\n  });\r\n  return <div>\r\n      <h2>User Information</h2>\r\n      <table>\r\n          <thead>\r\n              <tr>\r\n                  <th>User ID</th>\r\n                  <th>User Name</th>\r\n                  <th>User Photo</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              {users.map((user) => ( <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.login}</td>\r\n                  <td>\r\n                  <img src={user.avatar_url} \r\n                  width = \"100px\"\r\n                  height = \"100px\"\r\n                  alt=\"not found\"/>\r\n                  </td>\r\n              </tr>\r\n                ))}\r\n          </tbody>\r\n      </table>\r\n  </div>*/\n};\n_c = Convert;\nexport default Convert;\nvar _c;\n$RefreshReg$(_c, \"Convert\");","map":{"version":3,"names":["Convert","_c","$RefreshReg$"],"sources":["C:/Users/annys/code/keeptrack/src/sections/Convert.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\n/*interface userType {\r\n    id: number,\r\n    login: string,\r\n    avatar_url  : string\r\n}*/\r\ninterface currencyResponse {\r\n    data: {[key: string]: currencyData}\r\n}\r\n\r\ninterface currencyData {\r\n    symbol: string,\r\n    name: string,\r\n    symbol_name: string,\r\n    decimal_digits: number, \r\n    rounding: number,\r\n    code: string,\r\n    name_plural: string\r\n}\r\n\r\ntype resultProps = {\r\n    code: string;\r\n    value: number;\r\n}\r\n\r\nconst Convert = () => {\r\n    \r\n\r\n    /*const [currency, setCurrency] = useState<any>()\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://api.freecurrencyapi.com/v1/latest?apikey=fca_live_5VV9AFER3RG9q1OWWk8YwSxFjzoST5KYAvmw2We3&currencies=\").then((response) => {\r\n            setCurrency(response.data);\r\n        }).catch((error) => {\r\n            alert(error);\r\n        });\r\n    });\r\n\r\n    return <div>\r\n        <h2>Currencies</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Key</th>\r\n                    <th>Code</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    {Object.values(currency).map(v => (\r\n                        <tr>\r\n                            <td>{v[\"key\"]}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    /*const [users, setUsers] = useState<userType[]>([])\r\n    useEffect(() => {\r\n        axios.get(\"https://api.github.com/users\").then((response) => {\r\n            setUsers(response.data);\r\n        }).catch((error) => {\r\n            alert(error);\r\n        });\r\n    });\r\n    return <div>\r\n        <h2>User Information</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>User ID</th>\r\n                    <th>User Name</th>\r\n                    <th>User Photo</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {users.map((user) => ( <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.login}</td>\r\n                    <td>\r\n                    <img src={user.avatar_url} \r\n                    width = \"100px\"\r\n                    height = \"100px\"\r\n                    alt=\"not found\"/>\r\n                    </td>\r\n                </tr>\r\n\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </div>*/\r\n\r\n}\r\n\r\nexport default Convert;"],"mappings":"AAGA;AACA;AACA;AACA;AACA;;AAoBA,MAAMA,OAAO,GAAGA,CAAA,KAAM;;EAGlB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DI,CAiEH;AAAAC,EAAA,GApEKD,OAAO;AAsEb,eAAeA,OAAO;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}